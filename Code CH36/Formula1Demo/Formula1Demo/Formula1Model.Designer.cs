//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Formula1Model", "FK_Race_Circuit", "Circuit", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Formula1Demo.Circuit), "Race", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Formula1Demo.Race), true)]
[assembly: EdmRelationshipAttribute("Formula1Model", "FK_RaceResults_Race", "Race", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Formula1Demo.Race), "RaceResults", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Formula1Demo.RaceResult), true)]
[assembly: EdmRelationshipAttribute("Formula1Model", "FK_RaceResults_Racers", "Racers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Formula1Demo.Racer), "RaceResults", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Formula1Demo.RaceResult), true)]
[assembly: EdmRelationshipAttribute("Formula1Model", "FK_RaceResults_Teams", "Team", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Formula1Demo.Team), "RaceResult", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Formula1Demo.RaceResult), true)]

#endregion

namespace Formula1Demo
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Formula1Entities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new Formula1Entities object using the connection string found in the 'Formula1Entities' section of the application configuration file.
        /// </summary>
        public Formula1Entities() : base("name=Formula1Entities", "Formula1Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Formula1Entities object.
        /// </summary>
        public Formula1Entities(string connectionString) : base(connectionString, "Formula1Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Formula1Entities object.
        /// </summary>
        public Formula1Entities(EntityConnection connection) : base(connection, "Formula1Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Circuit> Circuits
        {
            get
            {
                if ((_Circuits == null))
                {
                    _Circuits = base.CreateObjectSet<Circuit>("Circuits");
                }
                return _Circuits;
            }
        }
        private ObjectSet<Circuit> _Circuits;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Race> Races
        {
            get
            {
                if ((_Races == null))
                {
                    _Races = base.CreateObjectSet<Race>("Races");
                }
                return _Races;
            }
        }
        private ObjectSet<Race> _Races;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RaceResult> RaceResults
        {
            get
            {
                if ((_RaceResults == null))
                {
                    _RaceResults = base.CreateObjectSet<RaceResult>("RaceResults");
                }
                return _RaceResults;
            }
        }
        private ObjectSet<RaceResult> _RaceResults;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Racer> Racers
        {
            get
            {
                if ((_Racers == null))
                {
                    _Racers = base.CreateObjectSet<Racer>("Racers");
                }
                return _Racers;
            }
        }
        private ObjectSet<Racer> _Racers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Team> Teams
        {
            get
            {
                if ((_Teams == null))
                {
                    _Teams = base.CreateObjectSet<Team>("Teams");
                }
                return _Teams;
            }
        }
        private ObjectSet<Team> _Teams;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Circuits EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCircuits(Circuit circuit)
        {
            base.AddObject("Circuits", circuit);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Races EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRaces(Race race)
        {
            base.AddObject("Races", race);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RaceResults EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRaceResults(RaceResult raceResult)
        {
            base.AddObject("RaceResults", raceResult);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Racers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRacers(Racer racer)
        {
            base.AddObject("Racers", racer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Teams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTeams(Team team)
        {
            base.AddObject("Teams", team);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Formula1Model", Name="Circuit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Circuit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Circuit object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="country">Initial value of the Country property.</param>
        public static Circuit CreateCircuit(global::System.Int32 id, global::System.String name, global::System.String country)
        {
            Circuit circuit = new Circuit();
            circuit.Id = id;
            circuit.Name = name;
            circuit.Country = country;
            return circuit;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Formula1Model", "FK_Race_Circuit", "Race")]
        public EntityCollection<Race> Races
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Race>("Formula1Model.FK_Race_Circuit", "Race");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Race>("Formula1Model.FK_Race_Circuit", "Race", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Formula1Model", Name="Race")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Race : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Race object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="circuitId">Initial value of the CircuitId property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        public static Race CreateRace(global::System.Int32 id, global::System.Int32 circuitId, global::System.DateTime date)
        {
            Race race = new Race();
            race.Id = id;
            race.CircuitId = circuitId;
            race.Date = date;
            return race;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CircuitId
        {
            get
            {
                return _CircuitId;
            }
            set
            {
                OnCircuitIdChanging(value);
                ReportPropertyChanging("CircuitId");
                _CircuitId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CircuitId");
                OnCircuitIdChanged();
            }
        }
        private global::System.Int32 _CircuitId;
        partial void OnCircuitIdChanging(global::System.Int32 value);
        partial void OnCircuitIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Formula1Model", "FK_Race_Circuit", "Circuit")]
        public Circuit Circuit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Circuit>("Formula1Model.FK_Race_Circuit", "Circuit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Circuit>("Formula1Model.FK_Race_Circuit", "Circuit").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Circuit> CircuitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Circuit>("Formula1Model.FK_Race_Circuit", "Circuit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Circuit>("Formula1Model.FK_Race_Circuit", "Circuit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Formula1Model", "FK_RaceResults_Race", "RaceResults")]
        public EntityCollection<RaceResult> RaceResults
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RaceResult>("Formula1Model.FK_RaceResults_Race", "RaceResults");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RaceResult>("Formula1Model.FK_RaceResults_Race", "RaceResults", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Formula1Model", Name="Racer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Racer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Racer object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="firstname">Initial value of the Firstname property.</param>
        /// <param name="lastname">Initial value of the Lastname property.</param>
        public static Racer CreateRacer(global::System.Int32 id, global::System.String firstname, global::System.String lastname)
        {
            Racer racer = new Racer();
            racer.Id = id;
            racer.Firstname = firstname;
            racer.Lastname = lastname;
            return racer;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Firstname
        {
            get
            {
                return _Firstname;
            }
            set
            {
                OnFirstnameChanging(value);
                ReportPropertyChanging("Firstname");
                _Firstname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Firstname");
                OnFirstnameChanged();
            }
        }
        private global::System.String _Firstname;
        partial void OnFirstnameChanging(global::System.String value);
        partial void OnFirstnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Lastname
        {
            get
            {
                return _Lastname;
            }
            set
            {
                OnLastnameChanging(value);
                ReportPropertyChanging("Lastname");
                _Lastname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Lastname");
                OnLastnameChanged();
            }
        }
        private global::System.String _Lastname;
        partial void OnLastnameChanging(global::System.String value);
        partial void OnLastnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Starts
        {
            get
            {
                return _Starts;
            }
            set
            {
                OnStartsChanging(value);
                ReportPropertyChanging("Starts");
                _Starts = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Starts");
                OnStartsChanged();
            }
        }
        private Nullable<global::System.Int32> _Starts;
        partial void OnStartsChanging(Nullable<global::System.Int32> value);
        partial void OnStartsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Wins
        {
            get
            {
                return _Wins;
            }
            set
            {
                OnWinsChanging(value);
                ReportPropertyChanging("Wins");
                _Wins = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Wins");
                OnWinsChanged();
            }
        }
        private Nullable<global::System.Int32> _Wins;
        partial void OnWinsChanging(Nullable<global::System.Int32> value);
        partial void OnWinsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Formula1Model", "FK_RaceResults_Racers", "RaceResults")]
        public EntityCollection<RaceResult> RaceResults
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RaceResult>("Formula1Model.FK_RaceResults_Racers", "RaceResults");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RaceResult>("Formula1Model.FK_RaceResults_Racers", "RaceResults", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Formula1Model", Name="RaceResult")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RaceResult : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RaceResult object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="raceId">Initial value of the RaceId property.</param>
        /// <param name="position">Initial value of the Position property.</param>
        /// <param name="racerId">Initial value of the RacerId property.</param>
        /// <param name="teamId">Initial value of the TeamId property.</param>
        public static RaceResult CreateRaceResult(global::System.Int32 id, global::System.Int32 raceId, global::System.Int32 position, global::System.Int32 racerId, global::System.Int32 teamId)
        {
            RaceResult raceResult = new RaceResult();
            raceResult.Id = id;
            raceResult.RaceId = raceId;
            raceResult.Position = position;
            raceResult.RacerId = racerId;
            raceResult.TeamId = teamId;
            return raceResult;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RaceId
        {
            get
            {
                return _RaceId;
            }
            set
            {
                OnRaceIdChanging(value);
                ReportPropertyChanging("RaceId");
                _RaceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RaceId");
                OnRaceIdChanged();
            }
        }
        private global::System.Int32 _RaceId;
        partial void OnRaceIdChanging(global::System.Int32 value);
        partial void OnRaceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Position
        {
            get
            {
                return _Position;
            }
            set
            {
                OnPositionChanging(value);
                ReportPropertyChanging("Position");
                _Position = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Position");
                OnPositionChanged();
            }
        }
        private global::System.Int32 _Position;
        partial void OnPositionChanging(global::System.Int32 value);
        partial void OnPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Grid
        {
            get
            {
                return _Grid;
            }
            set
            {
                OnGridChanging(value);
                ReportPropertyChanging("Grid");
                _Grid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Grid");
                OnGridChanged();
            }
        }
        private Nullable<global::System.Int32> _Grid;
        partial void OnGridChanging(Nullable<global::System.Int32> value);
        partial void OnGridChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Points
        {
            get
            {
                return _Points;
            }
            set
            {
                OnPointsChanging(value);
                ReportPropertyChanging("Points");
                _Points = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Points");
                OnPointsChanged();
            }
        }
        private Nullable<global::System.Decimal> _Points;
        partial void OnPointsChanging(Nullable<global::System.Decimal> value);
        partial void OnPointsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RacerId
        {
            get
            {
                return _RacerId;
            }
            set
            {
                OnRacerIdChanging(value);
                ReportPropertyChanging("RacerId");
                _RacerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RacerId");
                OnRacerIdChanged();
            }
        }
        private global::System.Int32 _RacerId;
        partial void OnRacerIdChanging(global::System.Int32 value);
        partial void OnRacerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TeamId
        {
            get
            {
                return _TeamId;
            }
            set
            {
                OnTeamIdChanging(value);
                ReportPropertyChanging("TeamId");
                _TeamId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TeamId");
                OnTeamIdChanged();
            }
        }
        private global::System.Int32 _TeamId;
        partial void OnTeamIdChanging(global::System.Int32 value);
        partial void OnTeamIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Formula1Model", "FK_RaceResults_Race", "Race")]
        public Race Race
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Race>("Formula1Model.FK_RaceResults_Race", "Race").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Race>("Formula1Model.FK_RaceResults_Race", "Race").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Race> RaceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Race>("Formula1Model.FK_RaceResults_Race", "Race");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Race>("Formula1Model.FK_RaceResults_Race", "Race", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Formula1Model", "FK_RaceResults_Racers", "Racers")]
        public Racer Racer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Racer>("Formula1Model.FK_RaceResults_Racers", "Racers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Racer>("Formula1Model.FK_RaceResults_Racers", "Racers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Racer> RacerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Racer>("Formula1Model.FK_RaceResults_Racers", "Racers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Racer>("Formula1Model.FK_RaceResults_Racers", "Racers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Formula1Model", "FK_RaceResults_Teams", "Team")]
        public Team Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("Formula1Model.FK_RaceResults_Teams", "Team").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("Formula1Model.FK_RaceResults_Teams", "Team").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> TeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("Formula1Model.FK_RaceResults_Teams", "Team");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("Formula1Model.FK_RaceResults_Teams", "Team", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Formula1Model", Name="Team")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Team : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Team object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Team CreateTeam(global::System.Int32 id, global::System.String name)
        {
            Team team = new Team();
            team.Id = id;
            team.Name = name;
            return team;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Formula1Model", "FK_RaceResults_Teams", "RaceResult")]
        public EntityCollection<RaceResult> RaceResults
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RaceResult>("Formula1Model.FK_RaceResults_Teams", "RaceResult");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RaceResult>("Formula1Model.FK_RaceResults_Teams", "RaceResult", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
