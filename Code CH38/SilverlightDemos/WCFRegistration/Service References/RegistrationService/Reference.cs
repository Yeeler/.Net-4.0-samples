//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.21006.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 3.0.40818.0
// 
namespace WCFRegistration.RegistrationService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Event", Namespace="http://schemas.datacontract.org/2004/07/SilverlightDemos.Web", IsReference=true)]
    public partial class Event : WCFRegistration.RegistrationService.EntityObject {
        
        private System.Collections.ObjectModel.ObservableCollection<WCFRegistration.RegistrationService.Attendee> AttendeesField;
        
        private System.DateTime DateFromField;
        
        private System.DateTime DateToField;
        
        private string DescriptionField;
        
        private int IdField;
        
        private string NameField;
        
        private System.Collections.ObjectModel.ObservableCollection<WCFRegistration.RegistrationService.RegistrationCode> RegistrationCodesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<WCFRegistration.RegistrationService.Attendee> Attendees {
            get {
                return this.AttendeesField;
            }
            set {
                if ((object.ReferenceEquals(this.AttendeesField, value) != true)) {
                    this.AttendeesField = value;
                    this.RaisePropertyChanged("Attendees");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateFrom {
            get {
                return this.DateFromField;
            }
            set {
                if ((this.DateFromField.Equals(value) != true)) {
                    this.DateFromField = value;
                    this.RaisePropertyChanged("DateFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTo {
            get {
                return this.DateToField;
            }
            set {
                if ((this.DateToField.Equals(value) != true)) {
                    this.DateToField = value;
                    this.RaisePropertyChanged("DateTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<WCFRegistration.RegistrationService.RegistrationCode> RegistrationCodes {
            get {
                return this.RegistrationCodesField;
            }
            set {
                if ((object.ReferenceEquals(this.RegistrationCodesField, value) != true)) {
                    this.RegistrationCodesField = value;
                    this.RaisePropertyChanged("RegistrationCodes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StructuralObject", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses", IsReference=true)]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WCFRegistration.RegistrationService.EntityObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WCFRegistration.RegistrationService.Attendee))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WCFRegistration.RegistrationService.RegistrationCode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WCFRegistration.RegistrationService.Event))]
    public partial class StructuralObject : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityObject", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses", IsReference=true)]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WCFRegistration.RegistrationService.Attendee))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WCFRegistration.RegistrationService.RegistrationCode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WCFRegistration.RegistrationService.Event))]
    public partial class EntityObject : WCFRegistration.RegistrationService.StructuralObject {
        
        private WCFRegistration.RegistrationService.EntityKey EntityKeyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFRegistration.RegistrationService.EntityKey EntityKey {
            get {
                return this.EntityKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityKeyField, value) != true)) {
                    this.EntityKeyField = value;
                    this.RaisePropertyChanged("EntityKey");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Attendee", Namespace="http://schemas.datacontract.org/2004/07/SilverlightDemos.Web", IsReference=true)]
    public partial class Attendee : WCFRegistration.RegistrationService.EntityObject {
        
        private string CompanyField;
        
        private string EmailField;
        
        private WCFRegistration.RegistrationService.Event EventField;
        
        private int EventIdField;
        
        private WCFRegistration.RegistrationService.EntityReferenceOfEventHKd_SaiZo EventReferenceField;
        
        private int IdField;
        
        private string NameField;
        
        private string RegistrationCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFRegistration.RegistrationService.Event Event {
            get {
                return this.EventField;
            }
            set {
                if ((object.ReferenceEquals(this.EventField, value) != true)) {
                    this.EventField = value;
                    this.RaisePropertyChanged("Event");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EventId {
            get {
                return this.EventIdField;
            }
            set {
                if ((this.EventIdField.Equals(value) != true)) {
                    this.EventIdField = value;
                    this.RaisePropertyChanged("EventId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFRegistration.RegistrationService.EntityReferenceOfEventHKd_SaiZo EventReference {
            get {
                return this.EventReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.EventReferenceField, value) != true)) {
                    this.EventReferenceField = value;
                    this.RaisePropertyChanged("EventReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegistrationCode {
            get {
                return this.RegistrationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RegistrationCodeField, value) != true)) {
                    this.RegistrationCodeField = value;
                    this.RaisePropertyChanged("RegistrationCode");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegistrationCode", Namespace="http://schemas.datacontract.org/2004/07/SilverlightDemos.Web", IsReference=true)]
    public partial class RegistrationCode : WCFRegistration.RegistrationService.EntityObject {
        
        private WCFRegistration.RegistrationService.Event EventField;
        
        private int EventIdField;
        
        private WCFRegistration.RegistrationService.EntityReferenceOfEventHKd_SaiZo EventReferenceField;
        
        private int IdField;
        
        private string RegistrationCode1Field;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFRegistration.RegistrationService.Event Event {
            get {
                return this.EventField;
            }
            set {
                if ((object.ReferenceEquals(this.EventField, value) != true)) {
                    this.EventField = value;
                    this.RaisePropertyChanged("Event");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EventId {
            get {
                return this.EventIdField;
            }
            set {
                if ((this.EventIdField.Equals(value) != true)) {
                    this.EventIdField = value;
                    this.RaisePropertyChanged("EventId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFRegistration.RegistrationService.EntityReferenceOfEventHKd_SaiZo EventReference {
            get {
                return this.EventReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.EventReferenceField, value) != true)) {
                    this.EventReferenceField = value;
                    this.RaisePropertyChanged("EventReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegistrationCode1 {
            get {
                return this.RegistrationCode1Field;
            }
            set {
                if ((object.ReferenceEquals(this.RegistrationCode1Field, value) != true)) {
                    this.RegistrationCode1Field = value;
                    this.RaisePropertyChanged("RegistrationCode1");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityKey", Namespace="http://schemas.datacontract.org/2004/07/System.Data", IsReference=true)]
    public partial class EntityKey : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string EntityContainerNameField;
        
        private System.Collections.ObjectModel.ObservableCollection<WCFRegistration.RegistrationService.EntityKeyMember> EntityKeyValuesField;
        
        private string EntitySetNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityContainerName {
            get {
                return this.EntityContainerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityContainerNameField, value) != true)) {
                    this.EntityContainerNameField = value;
                    this.RaisePropertyChanged("EntityContainerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<WCFRegistration.RegistrationService.EntityKeyMember> EntityKeyValues {
            get {
                return this.EntityKeyValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityKeyValuesField, value) != true)) {
                    this.EntityKeyValuesField = value;
                    this.RaisePropertyChanged("EntityKeyValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntitySetName {
            get {
                return this.EntitySetNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntitySetNameField, value) != true)) {
                    this.EntitySetNameField = value;
                    this.RaisePropertyChanged("EntitySetName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityKeyMember", Namespace="http://schemas.datacontract.org/2004/07/System.Data")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WCFRegistration.RegistrationService.EntityObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WCFRegistration.RegistrationService.StructuralObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WCFRegistration.RegistrationService.EntityReferenceOfEventHKd_SaiZo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WCFRegistration.RegistrationService.EntityReference))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WCFRegistration.RegistrationService.RelatedEnd))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WCFRegistration.RegistrationService.EntityKey))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<WCFRegistration.RegistrationService.EntityKeyMember>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<WCFRegistration.RegistrationService.Event>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WCFRegistration.RegistrationService.Event))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<WCFRegistration.RegistrationService.Attendee>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WCFRegistration.RegistrationService.Attendee))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<WCFRegistration.RegistrationService.RegistrationCode>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WCFRegistration.RegistrationService.RegistrationCode))]
    public partial class EntityKeyMember : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string KeyField;
        
        private object ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityReferenceOfEventHKd_SaiZo", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    public partial class EntityReferenceOfEventHKd_SaiZo : WCFRegistration.RegistrationService.EntityReference {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityReference", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WCFRegistration.RegistrationService.EntityReferenceOfEventHKd_SaiZo))]
    public partial class EntityReference : WCFRegistration.RegistrationService.RelatedEnd {
        
        private WCFRegistration.RegistrationService.EntityKey EntityKeyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFRegistration.RegistrationService.EntityKey EntityKey {
            get {
                return this.EntityKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityKeyField, value) != true)) {
                    this.EntityKeyField = value;
                    this.RaisePropertyChanged("EntityKey");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RelatedEnd", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WCFRegistration.RegistrationService.EntityReference))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WCFRegistration.RegistrationService.EntityReferenceOfEventHKd_SaiZo))]
    public partial class RelatedEnd : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RegistrationService.IRegistrationService")]
    public interface IRegistrationService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRegistrationService/GetEvents", ReplyAction="http://tempuri.org/IRegistrationService/GetEventsResponse")]
        System.IAsyncResult BeginGetEvents(System.DateTime fromTime, System.DateTime toTime, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<WCFRegistration.RegistrationService.Event> EndGetEvents(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRegistrationService/RegisterAttendee", ReplyAction="http://tempuri.org/IRegistrationService/RegisterAttendeeResponse")]
        System.IAsyncResult BeginRegisterAttendee(WCFRegistration.RegistrationService.Attendee attendee, System.AsyncCallback callback, object asyncState);
        
        bool EndRegisterAttendee(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRegistrationServiceChannel : WCFRegistration.RegistrationService.IRegistrationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetEventsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetEventsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<WCFRegistration.RegistrationService.Event> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<WCFRegistration.RegistrationService.Event>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RegisterAttendeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RegisterAttendeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RegistrationServiceClient : System.ServiceModel.ClientBase<WCFRegistration.RegistrationService.IRegistrationService>, WCFRegistration.RegistrationService.IRegistrationService {
        
        private BeginOperationDelegate onBeginGetEventsDelegate;
        
        private EndOperationDelegate onEndGetEventsDelegate;
        
        private System.Threading.SendOrPostCallback onGetEventsCompletedDelegate;
        
        private BeginOperationDelegate onBeginRegisterAttendeeDelegate;
        
        private EndOperationDelegate onEndRegisterAttendeeDelegate;
        
        private System.Threading.SendOrPostCallback onRegisterAttendeeCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public RegistrationServiceClient() {
        }
        
        public RegistrationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RegistrationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RegistrationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RegistrationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetEventsCompletedEventArgs> GetEventsCompleted;
        
        public event System.EventHandler<RegisterAttendeeCompletedEventArgs> RegisterAttendeeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WCFRegistration.RegistrationService.IRegistrationService.BeginGetEvents(System.DateTime fromTime, System.DateTime toTime, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetEvents(fromTime, toTime, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<WCFRegistration.RegistrationService.Event> WCFRegistration.RegistrationService.IRegistrationService.EndGetEvents(System.IAsyncResult result) {
            return base.Channel.EndGetEvents(result);
        }
        
        private System.IAsyncResult OnBeginGetEvents(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromTime = ((System.DateTime)(inValues[0]));
            System.DateTime toTime = ((System.DateTime)(inValues[1]));
            return ((WCFRegistration.RegistrationService.IRegistrationService)(this)).BeginGetEvents(fromTime, toTime, callback, asyncState);
        }
        
        private object[] OnEndGetEvents(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<WCFRegistration.RegistrationService.Event> retVal = ((WCFRegistration.RegistrationService.IRegistrationService)(this)).EndGetEvents(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetEventsCompleted(object state) {
            if ((this.GetEventsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetEventsCompleted(this, new GetEventsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetEventsAsync(System.DateTime fromTime, System.DateTime toTime) {
            this.GetEventsAsync(fromTime, toTime, null);
        }
        
        public void GetEventsAsync(System.DateTime fromTime, System.DateTime toTime, object userState) {
            if ((this.onBeginGetEventsDelegate == null)) {
                this.onBeginGetEventsDelegate = new BeginOperationDelegate(this.OnBeginGetEvents);
            }
            if ((this.onEndGetEventsDelegate == null)) {
                this.onEndGetEventsDelegate = new EndOperationDelegate(this.OnEndGetEvents);
            }
            if ((this.onGetEventsCompletedDelegate == null)) {
                this.onGetEventsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetEventsCompleted);
            }
            base.InvokeAsync(this.onBeginGetEventsDelegate, new object[] {
                        fromTime,
                        toTime}, this.onEndGetEventsDelegate, this.onGetEventsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WCFRegistration.RegistrationService.IRegistrationService.BeginRegisterAttendee(WCFRegistration.RegistrationService.Attendee attendee, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRegisterAttendee(attendee, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool WCFRegistration.RegistrationService.IRegistrationService.EndRegisterAttendee(System.IAsyncResult result) {
            return base.Channel.EndRegisterAttendee(result);
        }
        
        private System.IAsyncResult OnBeginRegisterAttendee(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WCFRegistration.RegistrationService.Attendee attendee = ((WCFRegistration.RegistrationService.Attendee)(inValues[0]));
            return ((WCFRegistration.RegistrationService.IRegistrationService)(this)).BeginRegisterAttendee(attendee, callback, asyncState);
        }
        
        private object[] OnEndRegisterAttendee(System.IAsyncResult result) {
            bool retVal = ((WCFRegistration.RegistrationService.IRegistrationService)(this)).EndRegisterAttendee(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRegisterAttendeeCompleted(object state) {
            if ((this.RegisterAttendeeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RegisterAttendeeCompleted(this, new RegisterAttendeeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RegisterAttendeeAsync(WCFRegistration.RegistrationService.Attendee attendee) {
            this.RegisterAttendeeAsync(attendee, null);
        }
        
        public void RegisterAttendeeAsync(WCFRegistration.RegistrationService.Attendee attendee, object userState) {
            if ((this.onBeginRegisterAttendeeDelegate == null)) {
                this.onBeginRegisterAttendeeDelegate = new BeginOperationDelegate(this.OnBeginRegisterAttendee);
            }
            if ((this.onEndRegisterAttendeeDelegate == null)) {
                this.onEndRegisterAttendeeDelegate = new EndOperationDelegate(this.OnEndRegisterAttendee);
            }
            if ((this.onRegisterAttendeeCompletedDelegate == null)) {
                this.onRegisterAttendeeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRegisterAttendeeCompleted);
            }
            base.InvokeAsync(this.onBeginRegisterAttendeeDelegate, new object[] {
                        attendee}, this.onEndRegisterAttendeeDelegate, this.onRegisterAttendeeCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override WCFRegistration.RegistrationService.IRegistrationService CreateChannel() {
            return new RegistrationServiceClientChannel(this);
        }
        
        private class RegistrationServiceClientChannel : ChannelBase<WCFRegistration.RegistrationService.IRegistrationService>, WCFRegistration.RegistrationService.IRegistrationService {
            
            public RegistrationServiceClientChannel(System.ServiceModel.ClientBase<WCFRegistration.RegistrationService.IRegistrationService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetEvents(System.DateTime fromTime, System.DateTime toTime, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = fromTime;
                _args[1] = toTime;
                System.IAsyncResult _result = base.BeginInvoke("GetEvents", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<WCFRegistration.RegistrationService.Event> EndGetEvents(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<WCFRegistration.RegistrationService.Event> _result = ((System.Collections.ObjectModel.ObservableCollection<WCFRegistration.RegistrationService.Event>)(base.EndInvoke("GetEvents", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRegisterAttendee(WCFRegistration.RegistrationService.Attendee attendee, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = attendee;
                System.IAsyncResult _result = base.BeginInvoke("RegisterAttendee", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndRegisterAttendee(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("RegisterAttendee", _args, result)));
                return _result;
            }
        }
    }
}
